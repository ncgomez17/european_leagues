{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/shot/detailShot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport shotService from '../../../services/shotService'; //retocar (atributos que dependen de otras tablas)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailShot() {\n  _s();\n\n  const params = useParams();\n  const navigate = useNavigate();\n  const isNew = !('id' in params);\n  const emptyShot = {\n    minute: \"\",\n    result: \"\",\n    site: \"\",\n    player: \"\"\n  };\n  const [shot, setShot] = useState(emptyShot);\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    if (!isNew) {\n      shotService.getShot(params.id).then(res => setShot(res.data));\n    }\n  }, [params.id, isNew]);\n\n  function onInputChange(e, name) {\n    const val = e.target && e.target.value || '';\n    let _shot = { ...shot\n    };\n    _shot[`${name}`] = val;\n    setShot(_shot);\n  }\n\n  function onCancel(event) {\n    navigate(\"/shots\");\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSubmitted(true);\n\n    if (dataShotCorrect(shot)) {\n      if (isNew) {\n        shotService.createShot(shot);\n      } else {\n        shotService.updateShot(shot);\n      }\n\n      navigate(\"/shots\");\n    }\n  }\n\n  function dataShotCorrect(c) {\n    return c.name && c.result;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"surface-card border-round shadow-2 p-4\",\n      children: [!isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"Detail of Shot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 28\n      }, this), isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"New Shot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"minute\",\n            className: \"col-fixed\",\n            children: \"minute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n              id: \"minute\",\n              value: shot.minute,\n              onChange: e => onInputChange(e, 'minute'),\n              required: true,\n              autoFocus: true,\n              className: classNames({\n                'p-invalid': submitted && !shot.minute\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), submitted && !shot.minute && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error\",\n              children: \"Minute must be indicated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"result\",\n              className: \"col-fixed\",\n              children: \"Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(InputText, {\n                id: \"result\",\n                value: shot.result,\n                onChange: e => onInputChange(e, 'result'),\n                required: true,\n                className: classNames({\n                  'p-invalid': submitted && !shot.result\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, this), submitted && !shot.result && /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"p-error\",\n                children: \" Result must be indicated.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"league\",\n              className: \"col-fixed\",\n              children: \"Site\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(InputText, {\n                id: \"league\",\n                required: true,\n                value: shot.site,\n                onChange: e => onInputChange(e, 'site')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"player\",\n              className: \"col-fixed\",\n              children: \"Player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(InputText, {\n                id: \"player\",\n                value: shot.player,\n                required: true,\n                onChange: e => onInputChange(e, 'player')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-p-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            label: \"Cancel\",\n            icon: \"pi pi-times\",\n            className: \"p-button-outlined mr-2\",\n            onClick: onCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Save\",\n            icon: \"pi pi-check\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailShot, \"a8y35R0WrBkHD2YcJniaKuWgUGs=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = DetailShot;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailShot\");","map":{"version":3,"sources":["/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/shot/detailShot.js"],"names":["React","useState","useEffect","InputText","InputNumber","Button","Divider","classNames","useParams","useNavigate","shotService","DetailShot","params","navigate","isNew","emptyShot","minute","result","site","player","shot","setShot","submitted","setSubmitted","getShot","id","then","res","data","onInputChange","e","name","val","target","value","_shot","onCancel","event","handleSubmit","preventDefault","dataShotCorrect","createShot","updateShot","c"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { InputText } from 'primereact/inputtext';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\n\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport shotService from '../../../services/shotService';\n\n//retocar (atributos que dependen de otras tablas)\nexport default function DetailShot() {\n\n    const params = useParams();\n    const navigate = useNavigate();\n    const isNew = !('id' in params);\n\n    const emptyShot = { minute: \"\", result: \"\", site: \"\", player:\"\"}\n    const [shot, setShot] = useState(emptyShot);\n    const [submitted, setSubmitted] = useState(false);\n\n\n    useEffect(() => {\n        if (!isNew) {\n            shotService.getShot(params.id).then(res => setShot(res.data));\n        }   \n    }, [params.id,isNew]);\n\n\n    function onInputChange(e, name) {\n        const val = (e.target && e.target.value) || '';\n        let _shot = { ...shot };\n        _shot[`${name}`] = val;\n        setShot(_shot);\n    }\n\n    function onCancel(event) {\n        navigate(\"/shots\");\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setSubmitted(true);\n        if (dataShotCorrect(shot)) {\n            if (isNew) {\n                shotService.createShot(shot);\n            } else {\n                shotService.updateShot(shot);\n            }\n            navigate(\"/shots\");\n        }\n    }\n\n    function dataShotCorrect(c) {\n        return (c.name && c.result);\n    }\n\n    return (\n        <div>\n            <div className=\"surface-card border-round shadow-2 p-4\">\n                {!isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">Detail of Shot</span>}\n                {isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">New Shot</span>}\n\n                <form onSubmit={handleSubmit} >\n                    <div className=\"field grid\" >\n                            <label htmlFor=\"minute\" className='col-fixed' >minute</label>\n                            <div className=\"col\">\n                            <InputNumber id=\"minute\" value={shot.minute} onChange={(e) => onInputChange(e, 'minute')} required autoFocus className={classNames({ 'p-invalid': submitted && !shot.minute })} />\n                            {submitted && !shot.minute && <small className=\"p-error\">Minute must be indicated.</small>}\n                            </div>\n\n                        <div className=\"field grid\">\n                            <label htmlFor=\"result\" className='col-fixed'>Result</label>\n                            <div className='col'>\n                            <InputText id=\"result\" value={shot.result} onChange={(e) => onInputChange(e, 'result')} required className={classNames({ 'p-invalid': submitted && !shot.result })} />\n                            {submitted && !shot.result && <small className=\"p-error\"> Result must be indicated.</small>}\n                            </div>\n                        </div>\n\n                        <div className=\"field grid\">\n                            <label htmlFor=\"league\" className='col-fixed'>Site</label>\n                            <div className='col'>\n                            <InputText id=\"league\" required value={shot.site} onChange={(e) => onInputChange(e, 'site')} />\n                            </div>\n                        </div>\n\n                        <div className=\"field grid\">\n                            <label htmlFor=\"player\" className='col-fixed'>Player</label>\n                            <div className='col'>\n                            <InputText id=\"player\" value={shot.player} required onChange={(e) => onInputChange(e, 'player')} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <Divider />\n\n                    <div className=\"p-p-3\">\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-outlined mr-2\" onClick={onCancel} />\n                        <Button label=\"Save\" icon=\"pi pi-check\" type=\"submit\" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}