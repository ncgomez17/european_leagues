{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/incident/detailIncident.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport incidentService from '../../../services/incidentService';\nimport playerService from '../../../services/playerService'; //retocar (atributos que dependen de otras tablas)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailIncident() {\n  _s();\n\n  const params = useParams();\n  const navigate = useNavigate();\n  const isNew = !('id' in params);\n  const emptyIncident = {\n    incidentType: \"\",\n    date: \"\",\n    player: {\n      id: null,\n      name: \"\",\n      numberOfMatches: \"\",\n      team: {}\n    }\n  };\n  const [incident, setIncident] = useState(emptyIncident);\n  const [submitted, setSubmitted] = useState(false);\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    if (!isNew) {\n      incidentService.getIncident(params.id).then(res => setIncident(res.data));\n    }\n\n    playerService.getAllPlayers().then(res => setPlayers(res.data));\n  }, [params.id, isNew]);\n\n  function onInputChange(e, name) {\n    const val = e.target && e.target.value || '';\n    let _incident = { ...incident\n    };\n    _incident[`${name}`] = val;\n    setIncident(_incident);\n  }\n\n  function onPlayerChange(e) {\n    let _incident = { ...incident\n    };\n    _incident.player = e.value;\n    setIncident(_incident);\n  }\n\n  function onInputDateChange(e, date) {\n    const val = e.target && e.target.value || '';\n    let _incident = { ...incident\n    };\n    _incident[`${date}`] = val;\n    setIncident(_incident);\n  }\n\n  function onCancel(event) {\n    navigate(\"/incidents\");\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSubmitted(true);\n\n    if (dataIncidentCorrect(incident)) {\n      if (isNew) {\n        incidentService.createIncident(incident);\n      } else {\n        incidentService.updateIncident(incident);\n      }\n\n      navigate(\"/incidents\");\n    }\n  }\n\n  function dataIncidentCorrect(c) {\n    return c.incidentType && c.player && c.date;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"surface-card border-round shadow-2 p-4\",\n      children: [!isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"Detail of Incident\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 28\n      }, this), isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"New Incident \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"incidentType\",\n            className: \"col-fixed\",\n            children: \"IncidentType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"incidentType\",\n              value: incident.incidentType,\n              onChange: e => onInputChange(e, 'incidentType'),\n              required: true,\n              autoFocus: true,\n              className: classNames({\n                'p-invalid': submitted && !incident.incidentType\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), submitted && !incident.incidentType && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error\",\n              children: \"Incident type must be indicated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            className: \"col-fixed\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Calendar, {\n              id: \"date\",\n              required: true,\n              onChange: e => onInputDateChange(e, 'date'),\n              dateFormat: \"yy-mm-dd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"player\",\n            className: \"col-fixed\",\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              id: \"players\",\n              value: incident.player,\n              options: players,\n              onChange: onPlayerChange,\n              optionLabel: \"name\",\n              filter: true,\n              showClear: true,\n              filterBy: \"player.name\",\n              placeholder: \"Select player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-p-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            label: \"Cancel\",\n            icon: \"pi pi-times\",\n            className: \"p-button-outlined mr-2\",\n            onClick: onCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Save\",\n            icon: \"pi pi-check\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailIncident, \"zbxKazkwDifwpqmUqPkHl3qnPgc=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = DetailIncident;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailIncident\");","map":{"version":3,"sources":["/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/incident/detailIncident.js"],"names":["React","useState","useEffect","InputText","Button","Divider","classNames","Calendar","Dropdown","useParams","useNavigate","incidentService","playerService","DetailIncident","params","navigate","isNew","emptyIncident","incidentType","date","player","id","name","numberOfMatches","team","incident","setIncident","submitted","setSubmitted","players","setPlayers","getIncident","then","res","data","getAllPlayers","onInputChange","e","val","target","value","_incident","onPlayerChange","onInputDateChange","onCancel","event","handleSubmit","preventDefault","dataIncidentCorrect","createIncident","updateIncident","c"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Calendar } from 'primereact/calendar';\nimport { Dropdown } from 'primereact/dropdown';\n\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport incidentService from '../../../services/incidentService';\nimport playerService from '../../../services/playerService';\n\n//retocar (atributos que dependen de otras tablas)\nexport default function DetailIncident() {\n\n    const params = useParams();\n    const navigate = useNavigate();\n    const isNew = !('id' in params);\n\n    const emptyIncident= { incidentType: \"\", date: \"\", player: { id: null, name: \"\", numberOfMatches: \"\", team: {} }}\n    const [incident, setIncident] = useState(emptyIncident);\n    const [submitted, setSubmitted] = useState(false);\n    const [players, setPlayers] = useState([]);\n\n\n    useEffect(() => {\n        if (!isNew) {\n            incidentService.getIncident(params.id).then(res => setIncident(res.data));\n        }   \n        playerService.getAllPlayers().then(res => setPlayers(res.data)); \n    }, [params.id,isNew]);\n\n\n    function onInputChange(e, name) {\n        const val = (e.target && e.target.value) || '';\n        let _incident = { ...incident };\n        _incident[`${name}`] = val;\n        setIncident(_incident);\n    }\n\n    function onPlayerChange(e) {\n        let _incident = { ...incident };\n        _incident.player = e.value;\n        setIncident(_incident);\n    }\n\n    function onInputDateChange(e, date) {\n        const val = (e.target && e.target.value) || '';\n        let _incident = { ...incident };\n        _incident[`${date}`] = val;\n        setIncident(_incident);\n    }\n\n    function onCancel(event) {\n        navigate(\"/incidents\");\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setSubmitted(true);\n        if (dataIncidentCorrect(incident)) {\n            if (isNew) {\n                incidentService.createIncident(incident);\n            } else {\n                incidentService.updateIncident(incident);\n            }\n            navigate(\"/incidents\");\n        }\n    }\n\n    function dataIncidentCorrect(c) {\n        return (c.incidentType && c.player && c.date);\n    }\n\n    return (\n        \n        <div>\n            <div className=\"surface-card border-round shadow-2 p-4\">\n                {!isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">Detail of Incident</span>}\n                {isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">New Incident </span>}\n\n                <form onSubmit={handleSubmit} >\n                        <div className=\"field grid\">\n                            <label htmlFor=\"incidentType\" className='col-fixed' >IncidentType</label>\n                            <div className=\"col\">\n                            <InputText id=\"incidentType\" value={incident.incidentType} onChange={(e) => onInputChange(e, 'incidentType')} required autoFocus className={classNames({ 'p-invalid': submitted && !incident.incidentType })} />\n                            {submitted && !incident.incidentType && <small className=\"p-error\">Incident type must be indicated.</small>}\n                            </div>\n                        </div>\n                        <div className=\"field grid\">\n                            <label htmlFor=\"date\" className='col-fixed'>Date</label>\n                            <div className=\"col\">\n                            <Calendar id=\"date\" required onChange={(e) => onInputDateChange(e,'date')} dateFormat=\"yy-mm-dd\" ></Calendar>\n                            </div>\n                        </div>\n\n                        <div className=\"field grid\">\n                            <label htmlFor=\"player\" className='col-fixed'>Player</label>\n                            <div className='col'>\n                            <Dropdown id=\"players\" value={incident.player} options={players} onChange={onPlayerChange} optionLabel=\"name\"\n                                filter showClear filterBy=\"player.name\" placeholder=\"Select player\" />\n                            </div>\n                        </div>\n\n                    <Divider />\n\n                    <div className=\"p-p-3\">\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-outlined mr-2\" onClick={onCancel} />\n                        <Button label=\"Save\" icon=\"pi pi-check\" type=\"submit\" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}