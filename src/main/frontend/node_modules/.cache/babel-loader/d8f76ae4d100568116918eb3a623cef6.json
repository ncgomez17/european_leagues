{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/team/detailTeam.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Dropdown } from 'primereact/dropdown';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport teamService from '../../../services/teamService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailTeam() {\n  _s();\n\n  const params = useParams();\n  const navigate = useNavigate();\n  const isNew = !('id' in params);\n  const emptyTeam = {\n    name: \"\",\n    numberOfPlayers: \"\",\n    league: \"\"\n  };\n  const [team, setTeam] = useState(emptyTeam);\n  const [submitted, setSubmitted] = useState(false);\n  const nameLeagues = [\"Premier League\", \"LaLiga\", \"Serie A\", \"Bundesliga\", \"Ligue 1\", \"Primera DivisiÃ³n Portuguesa\"];\n  useEffect(() => {\n    if (!isNew) {\n      teamService.getTeam(params.id).then(res => setTeam(res.data));\n    }\n  }, [params.id, isNew]);\n\n  function onInputChange(e, name) {\n    const val = e.target && e.target.value || '';\n    let _team = { ...team\n    };\n    _team[`${name}`] = val;\n    setTeam(_team);\n  }\n\n  function onLeagueChange(e) {\n    let _team = { ...team\n    };\n    _team.league = e.value;\n    setTeam(_team);\n  }\n\n  function onCancel(event) {\n    navigate(\"/teams\");\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSubmitted(true);\n\n    if (dataTeamCorrect(team)) {\n      if (isNew) {\n        teamService.createTeam(team);\n      } else {\n        teamService.updateTeam(team);\n      }\n\n      navigate(\"/teams\");\n    }\n  }\n\n  function dataTeamCorrect(c) {\n    return c.name && c.league;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"surface-card border-round shadow-2 p-4\",\n      children: [!isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"Detail of Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 28\n      }, this), isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"New Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(InputText, {\n                id: \"name\",\n                value: team.name,\n                onChange: e => onInputChange(e, 'name'),\n                required: true,\n                autoFocus: true,\n                className: classNames({\n                  'p-invalid': submitted && !team.name\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, this), submitted && !team.name && /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"p-error\",\n                children: \"A name must be indicated.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"numberOfPlayers\",\n                  children: \"NumberOfPlayers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(InputText, {\n                  id: \"numberOfPlayers\",\n                  value: team.numberOfPlayers,\n                  onChange: e => onInputChange(e, 'numberOfPlayers'),\n                  required: true,\n                  className: classNames({\n                    'p-invalid': submitted && !team.numberOfPlayers\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 29\n                }, this), submitted && !team.numberOfPlayers && /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"p-error\",\n                  children: \" Number of players must be indicated.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"leagues\",\n                  children: \"League\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  id: \"leagues\",\n                  value: team.league,\n                  options: nameLeagues,\n                  onChange: onLeagueChange,\n                  f: true,\n                  showClear: true,\n                  placeholder: \"Select league\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-p-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            label: \"Cancel\",\n            icon: \"pi pi-times\",\n            className: \"p-button-outlined mr-2\",\n            onClick: onCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Save\",\n            icon: \"pi pi-check\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailTeam, \"VSZEZLG2n+K6tMHE8hU98Gov9/g=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = DetailTeam;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailTeam\");","map":{"version":3,"sources":["/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/team/detailTeam.js"],"names":["React","useState","useEffect","InputText","Button","Divider","classNames","Dropdown","useParams","useNavigate","teamService","DetailTeam","params","navigate","isNew","emptyTeam","name","numberOfPlayers","league","team","setTeam","submitted","setSubmitted","nameLeagues","getTeam","id","then","res","data","onInputChange","e","val","target","value","_team","onLeagueChange","onCancel","event","handleSubmit","preventDefault","dataTeamCorrect","createTeam","updateTeam","c"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Dropdown } from 'primereact/dropdown';\n\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport teamService from '../../../services/teamService';\n\nexport default function DetailTeam() {\n\n    const params = useParams();\n    const navigate = useNavigate();\n    const isNew = !('id' in params);\n\n    const emptyTeam = { name: \"\", numberOfPlayers: \"\", league: \"\"}\n    const [team, setTeam] = useState(emptyTeam);\n    const [submitted, setSubmitted] = useState(false);\n    const nameLeagues =[\"Premier League\",\"LaLiga\",\"Serie A\",\"Bundesliga\",\"Ligue 1\",\"Primera DivisiÃ³n Portuguesa\"]\n\n\n    useEffect(() => {\n        if (!isNew) {\n            teamService.getTeam(params.id).then(res => setTeam(res.data));\n        }   \n    }, [params.id,isNew]);\n\n\n    function onInputChange(e, name) {\n        const val = (e.target && e.target.value) || '';\n        let _team = { ...team };\n        _team[`${name}`] = val;\n        setTeam(_team);\n    }\n\n    function onLeagueChange(e) {\n        let _team = { ...team };\n        _team.league = e.value;\n        setTeam(_team);\n    }\n\n    function onCancel(event) {\n        navigate(\"/teams\");\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setSubmitted(true);\n        if (dataTeamCorrect(team)) {\n            if (isNew) {\n                teamService.createTeam(team);\n            } else {\n                teamService.updateTeam(team);\n            }\n            navigate(\"/teams\");\n        }\n    }\n\n    function dataTeamCorrect(c) {\n        return (c.name && c.league);\n    }\n\n    return (\n        <div>\n            <div className=\"surface-card border-round shadow-2 p-4\">\n                {!isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">Detail of Team</span>}\n                {isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">New Team</span>}\n\n            <form onSubmit={handleSubmit} >\n                <div className=\"grid\">\n                    <div className=\"col-8\">\n                    <div className=\"row\">\n                            <label htmlFor=\"name\" >Name</label>\n                            <InputText id=\"name\" value={team.name} onChange={(e) => onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': submitted && !team.name })} />\n                            {submitted && !team.name && <small className=\"p-error\">A name must be indicated.</small>}\n                        </div>\n                    <div className=\"row\">\n                        <div className=\"p-field\">\n                            <label htmlFor=\"numberOfPlayers\">NumberOfPlayers</label>\n                            <InputText id=\"numberOfPlayers\" value={team.numberOfPlayers} onChange={(e) => onInputChange(e, 'numberOfPlayers')} required className={classNames({ 'p-invalid': submitted && !team.numberOfPlayers })} />\n                            {submitted && !team.numberOfPlayers && <small className=\"p-error\"> Number of players must be indicated.</small>}\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className=\"p-field\">\n                            <label htmlFor=\"leagues\">League</label>\n                            <Dropdown id=\"leagues\"value={team.league} options={nameLeagues} onChange={onLeagueChange}\n                                f showClear placeholder=\"Select league\" />\n                        </div>\n                    </div>\n                    </div>\n                    </div>\n\n                    <Divider />\n\n                    <div className=\"p-p-3\">\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-outlined mr-2\" onClick={onCancel} />\n                        <Button label=\"Save\" icon=\"pi pi-check\" type=\"submit\" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}