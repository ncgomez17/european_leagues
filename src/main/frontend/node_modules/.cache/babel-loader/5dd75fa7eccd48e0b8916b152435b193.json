{"ast":null,"code":"// Este archivo contiene exportables de actions y action creators de Redux\nimport api from \"../services/playerService\"; // ACTIONS PLAYERS \n\nexport const SEARCH_PLAYERS = \"SEARCH_PLAYERS\";\nexport const ADD_PLAYER = \"ADD_PLAYER\";\nexport const DELETE_PLAYER = \"DELETE_PLAYER\";\nexport const GET_PLAYER = \"GET_PLAYER\";\nexport const UPDATE_PLAYER = \"UPDATE_PLAYER\";\nexport const SEARCH_PLAYERS_BY_NAME = \"SEARCH_PLAYERS_BY_NAME\"; // ACTION PLAYERS\n\nexport const searchPlayers = () => ({\n  type: SEARCH_PLAYERS,\n  payload: api.getAllPlayers().then(data => data.data)\n});\nexport const searchPlayerByName = name => ({\n  type: SEARCH_PLAYERS_BY_NAME,\n  payload: api.searchPlayer(name).then(data => data.data)\n});\nexport const addPlayer = playerDTO => ({\n  type: ADD_PLAYER,\n  payload: api.z(playerDTO).then(data => data.data)\n});\nexport const getPlayer = id => ({\n  type: GET_PLAYER,\n  payload: api.getPlayer(id).then(data => data.data)\n});\nexport const deletePlayer = id => ({\n  type: DELETE_PLAYER,\n  payload: api.deletePlayer(id).then(data => data.data)\n});\nexport const updatePlayer = playerDTO => ({\n  type: UPDATE_PLAYER,\n  payload: api.updatePlayer(playerDTO).then(data => data.data)\n});","map":{"version":3,"sources":["/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/actions/player.js"],"names":["api","SEARCH_PLAYERS","ADD_PLAYER","DELETE_PLAYER","GET_PLAYER","UPDATE_PLAYER","SEARCH_PLAYERS_BY_NAME","searchPlayers","type","payload","getAllPlayers","then","data","searchPlayerByName","name","searchPlayer","addPlayer","playerDTO","z","getPlayer","id","deletePlayer","updatePlayer"],"mappings":"AAAA;AACA,OAAOA,GAAP,MAAgB,2BAAhB,C,CACA;;AACA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,aAAa,GAAE,eAArB;AACP,OAAO,MAAMC,sBAAsB,GAAE,wBAA9B,C,CAEP;;AAEA,OAAO,MAAMC,aAAa,GAAG,OAAM;AACjCC,EAAAA,IAAI,EAAEP,cAD2B;AAEjCQ,EAAAA,OAAO,EAAET,GAAG,CAACU,aAAJ,GAAoBC,IAApB,CAAyBC,IAAI,IAAIA,IAAI,CAACA,IAAtC;AAFwB,CAAN,CAAtB;AAKP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,KAAU;AAC1CN,EAAAA,IAAI,EAAEF,sBADoC;AAE1CG,EAAAA,OAAO,EAAET,GAAG,CAACe,YAAJ,CAAiBD,IAAjB,EAAuBH,IAAvB,CAA4BC,IAAI,IAAIA,IAAI,CAACA,IAAzC;AAFiC,CAAV,CAA3B;AAKP,OAAO,MAAMI,SAAS,GAAIC,SAAD,KAAe;AACtCT,EAAAA,IAAI,EAAEN,UADgC;AAEtCO,EAAAA,OAAO,EAAET,GAAG,CAACkB,CAAJ,CAAMD,SAAN,EAAiBN,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAACA,IAAnC;AAF6B,CAAf,CAAlB;AAKP,OAAO,MAAMO,SAAS,GAAIC,EAAD,KAAQ;AAC/BZ,EAAAA,IAAI,EAAEJ,UADyB;AAE/BK,EAAAA,OAAO,EAAET,GAAG,CAACmB,SAAJ,CAAcC,EAAd,EAAkBT,IAAlB,CAAuBC,IAAI,IAAIA,IAAI,CAACA,IAApC;AAFsB,CAAR,CAAlB;AAKP,OAAO,MAAMS,YAAY,GAAID,EAAD,KAAQ;AAClCZ,EAAAA,IAAI,EAAEL,aAD4B;AAElCM,EAAAA,OAAO,EAAET,GAAG,CAACqB,YAAJ,CAAiBD,EAAjB,EAAqBT,IAArB,CAA0BC,IAAI,IAAIA,IAAI,CAACA,IAAvC;AAFyB,CAAR,CAArB;AAKP,OAAO,MAAMU,YAAY,GAAIL,SAAD,KAAe;AACzCT,EAAAA,IAAI,EAAEH,aADmC;AAEzCI,EAAAA,OAAO,EAAET,GAAG,CAACsB,YAAJ,CAAiBL,SAAjB,EAA4BN,IAA5B,CAAiCC,IAAI,IAAIA,IAAI,CAACA,IAA9C;AAFgC,CAAf,CAArB","sourcesContent":["// Este archivo contiene exportables de actions y action creators de Redux\nimport api from \"../services/playerService\";\n// ACTIONS PLAYERS \nexport const SEARCH_PLAYERS = \"SEARCH_PLAYERS\";\nexport const ADD_PLAYER = \"ADD_PLAYER\";\nexport const DELETE_PLAYER = \"DELETE_PLAYER\";\nexport const GET_PLAYER = \"GET_PLAYER\";\nexport const UPDATE_PLAYER= \"UPDATE_PLAYER\";\nexport const SEARCH_PLAYERS_BY_NAME= \"SEARCH_PLAYERS_BY_NAME\";\n\n// ACTION PLAYERS\n\nexport const searchPlayers = () =>({\n  type: SEARCH_PLAYERS,\n  payload: api.getAllPlayers().then(data => data.data)\n})\n\nexport const searchPlayerByName = (name) =>({\n  type: SEARCH_PLAYERS_BY_NAME,\n  payload: api.searchPlayer(name).then(data => data.data),\n})\n\nexport const addPlayer = (playerDTO) =>({\n  type: ADD_PLAYER,\n  payload: api.z(playerDTO).then(data => data.data),\n})\n\nexport const getPlayer = (id) =>({\n  type: GET_PLAYER,\n  payload: api.getPlayer(id).then(data => data.data),\n})\n\nexport const deletePlayer = (id) =>({\n  type: DELETE_PLAYER,\n  payload: api.deletePlayer(id).then(data => data.data),\n})\n\nexport const updatePlayer = (playerDTO) =>({\n  type: UPDATE_PLAYER,\n  payload: api.updatePlayer(playerDTO).then(data => data.data),\n})"]},"metadata":{},"sourceType":"module"}