{"ast":null,"code":"import { fulfiledType, pendingType, rejectedType } from \"../utils\";\nimport { SEARCH_INCIDENTS, SEARCH_INCIDENTS_BY_NAME, ADD_INCIDENT, DELETE_INCIDENT, UPDATE_INCIDENT, GET_INCIDENT } from \"../actions/incident\";\nconst initialState = {\n  cargando: false,\n  todos: [],\n  rejected: null\n};\nexport function incidents() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.todos;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case fulfiledType(ADD_INCIDENT):\n    case fulfiledType(DELETE_INCIDENT):\n    case fulfiledType(UPDATE_INCIDENT):\n    case fulfiledType(SEARCH_INCIDENTS_BY_NAME):\n    case fulfiledType(GET_INCIDENT):\n    case fulfiledType(SEARCH_INCIDENTS):\n      return payload;\n\n    case pendingType(SEARCH_INCIDENTS):\n    case pendingType(ADD_INCIDENT):\n    case pendingType(DELETE_INCIDENT):\n    case pendingType(SEARCH_INCIDENTS_BY_NAME):\n    case pendingType(UPDATE_INCIDENT):\n    case pendingType(GET_INCIDENT):\n    case rejectedType(SEARCH_INCIDENTS):\n    case rejectedType(ADD_INCIDENT):\n    case rejectedType(DELETE_INCIDENT):\n    case rejectedType(UPDATE_INCIDENT):\n    case rejectedType(GET_INCIDENT):\n      return state;\n\n    default:\n      return state;\n  }\n}\nexport function incidentsPending() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.cargando;\n  let {\n    type\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case pendingType(SEARCH_INCIDENTS):\n    case pendingType(ADD_INCIDENT):\n    case pendingType(DELETE_INCIDENT):\n    case pendingType(UPDATE_INCIDENT):\n    case pendingType(GET_INCIDENT):\n    case pendingType(SEARCH_INCIDENTS_BY_NAME):\n      return true;\n\n    case fulfiledType(SEARCH_INCIDENTS):\n    case fulfiledType(ADD_INCIDENT):\n    case fulfiledType(DELETE_INCIDENT):\n    case fulfiledType(UPDATE_INCIDENT):\n    case fulfiledType(GET_INCIDENT):\n    case fulfiledType(SEARCH_INCIDENTS_BY_NAME):\n    case rejectedType(SEARCH_INCIDENTS):\n    case rejectedType(ADD_INCIDENT):\n    case rejectedType(DELETE_INCIDENT):\n    case rejectedType(UPDATE_INCIDENT):\n    case rejectedType(GET_INCIDENT):\n    case rejectedType(SEARCH_INCIDENTS_BY_NAME):\n      return false;\n\n    default:\n      return state;\n  }\n}\nexport function incidentsRejected() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.rejected;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case rejectedType(SEARCH_INCIDENTS):\n    case rejectedType(ADD_INCIDENT):\n    case rejectedType(DELETE_INCIDENT):\n    case rejectedType(UPDATE_INCIDENT):\n    case rejectedType(GET_INCIDENT):\n    case rejectedType(SEARCH_INCIDENTS_BY_NAME):\n      return payload;\n\n    case fulfiledType(SEARCH_INCIDENTS):\n    case fulfiledType(ADD_INCIDENT):\n    case fulfiledType(DELETE_INCIDENT):\n    case fulfiledType(UPDATE_INCIDENT):\n    case fulfiledType(GET_INCIDENT):\n    case fulfiledType(SEARCH_INCIDENTS_BY_NAME):\n    case pendingType(SEARCH_INCIDENTS):\n    case pendingType(ADD_INCIDENT):\n    case pendingType(DELETE_INCIDENT):\n    case pendingType(UPDATE_INCIDENT):\n    case pendingType(GET_INCIDENT):\n    case pendingType(SEARCH_INCIDENTS_BY_NAME):\n      return null;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/reducers/incident.js"],"names":["fulfiledType","pendingType","rejectedType","SEARCH_INCIDENTS","SEARCH_INCIDENTS_BY_NAME","ADD_INCIDENT","DELETE_INCIDENT","UPDATE_INCIDENT","GET_INCIDENT","initialState","cargando","todos","rejected","incidents","state","type","payload","incidentsPending","incidentsRejected"],"mappings":"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","sourcesContent":["import { fulfiledType, pendingType ,rejectedType } from \"../utils\";\nimport { SEARCH_INCIDENTS,SEARCH_INCIDENTS_BY_NAME,ADD_INCIDENT,DELETE_INCIDENT,UPDATE_INCIDENT,GET_INCIDENT } from \"../actions/incident\";\n\nconst initialState = {\n    cargando: false,\n    todos: [],\n    rejected: null\n}\n\nexport function incidents(state = initialState.todos, {type, payload}){\n\n    switch(type){\n        case fulfiledType(ADD_INCIDENT):\n        case fulfiledType(DELETE_INCIDENT):\n        case fulfiledType(UPDATE_INCIDENT):\n        case fulfiledType(SEARCH_INCIDENTS_BY_NAME):\n        case fulfiledType(GET_INCIDENT):\n        case fulfiledType(SEARCH_INCIDENTS):\n            return payload;\n\n        case pendingType(SEARCH_INCIDENTS):\n        case pendingType(ADD_INCIDENT):\n        case pendingType(DELETE_INCIDENT):\n        case pendingType(SEARCH_INCIDENTS_BY_NAME):\n        case pendingType(UPDATE_INCIDENT):\n        case pendingType(GET_INCIDENT):\n        case rejectedType(SEARCH_INCIDENTS):\n        case rejectedType(ADD_INCIDENT):\n        case rejectedType(DELETE_INCIDENT):\n        case rejectedType(UPDATE_INCIDENT):\n        case rejectedType(GET_INCIDENT):\n            return state\n\n        default:\n            return state\n\n    }\n}\n\nexport function incidentsPending(state = initialState.cargando, {type}){\n\n    switch(type){\n        case pendingType(SEARCH_INCIDENTS):\n        case pendingType(ADD_INCIDENT):\n        case pendingType(DELETE_INCIDENT):\n        case pendingType(UPDATE_INCIDENT):\n        case pendingType(GET_INCIDENT):\n        case pendingType(SEARCH_INCIDENTS_BY_NAME):\n            return true\n\n        case fulfiledType(SEARCH_INCIDENTS):\n        case fulfiledType(ADD_INCIDENT):\n        case fulfiledType(DELETE_INCIDENT):\n        case fulfiledType(UPDATE_INCIDENT):\n        case fulfiledType(GET_INCIDENT):\n        case fulfiledType(SEARCH_INCIDENTS_BY_NAME):\n        case rejectedType(SEARCH_INCIDENTS):   \n        case rejectedType(ADD_INCIDENT):\n        case rejectedType(DELETE_INCIDENT):\n        case rejectedType(UPDATE_INCIDENT):\n        case rejectedType(GET_INCIDENT):\n        case rejectedType(SEARCH_INCIDENTS_BY_NAME):\n            return false\n\n        default:\n            return state\n    }\n}\n\nexport function incidentsRejected(state = initialState.rejected, {type, payload}){\n\n    switch(type){ \n        case rejectedType(SEARCH_INCIDENTS):\n        case rejectedType(ADD_INCIDENT):\n        case rejectedType(DELETE_INCIDENT):\n        case rejectedType(UPDATE_INCIDENT):\n        case rejectedType(GET_INCIDENT):\n        case rejectedType(SEARCH_INCIDENTS_BY_NAME):\n            return payload\n\n        case fulfiledType(SEARCH_INCIDENTS):\n        case fulfiledType(ADD_INCIDENT):\n        case fulfiledType(DELETE_INCIDENT):\n        case fulfiledType(UPDATE_INCIDENT):\n        case fulfiledType(GET_INCIDENT):\n        case fulfiledType(SEARCH_INCIDENTS_BY_NAME):\n        case pendingType(SEARCH_INCIDENTS):\n        case pendingType(ADD_INCIDENT):\n        case pendingType(DELETE_INCIDENT):\n        case pendingType(UPDATE_INCIDENT):\n        case pendingType(GET_INCIDENT):\n        case pendingType(SEARCH_INCIDENTS_BY_NAME):\n            return null\n\n        default:\n            return state\n    \n    } \n}"]},"metadata":{},"sourceType":"module"}