{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/incident/detailIncident.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Calendar } from 'primereact/calendar';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport incidentService from '../../../services/incidentService'; //retocar (atributos que dependen de otras tablas)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailIncident() {\n  _s();\n\n  const params = useParams();\n  const navigate = useNavigate();\n  const isNew = !('id' in params);\n  const emptyIncident = {\n    incidentType: \"\",\n    date: \"\",\n    match: \"\",\n    player: \"\"\n  };\n  const [incident, setIncident] = useState(emptyIncident);\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    if (!isNew) {\n      incidentService.getIncident(params.id).then(res => setIncident(res.data));\n    }\n  }, [params.id, isNew]);\n\n  function onInputChange(e, name) {\n    const val = e.target && e.target.value || '';\n    let _incident = { ...incident\n    };\n    _incident[`${name}`] = val;\n    setIncident(_incident);\n  }\n\n  function onInputDateChange(e, date) {\n    const val = e.target && e.target.value || '';\n    let _incident = { ...incident\n    };\n    _incident[`${date}`] = val;\n    setIncident(_incident);\n  }\n\n  function onCancel(event) {\n    navigate(\"/incidents\");\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSubmitted(true);\n\n    if (dataIncidentCorrect(incident)) {\n      if (isNew) {\n        incidentService.createIncident(incident);\n      } else {\n        incidentService.updateIncident(incident);\n      }\n\n      navigate(\"/incidents\");\n    }\n  }\n\n  function dataIncidentCorrect(c) {\n    return c.incidentType && c.player && c.date;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"surface-card border-round shadow-2 p-4\",\n      children: [!isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"Detail of Incident\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 28\n      }, this), isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"New Incident \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"incidentType\",\n            className: \"col-fixed\",\n            children: \"IncidentType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"incidentType\",\n              value: incident.incidentType,\n              onChange: e => onInputChange(e, 'incidentType'),\n              required: true,\n              autoFocus: true,\n              className: classNames({\n                'p-invalid': submitted && !incident.incidentType\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), submitted && !incident.incidentType && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error\",\n              children: \"Incident type must be indicated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            className: \"col-fixed\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Calendar, {\n              id: \"date\",\n              required: true,\n              onChange: e => onInputDateChange(e, 'date'),\n              dateFormat: \"yy-mm-dd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"match\",\n            className: \"col-fixed\",\n            children: \"Match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"match\",\n              value: incident.match,\n              onChange: e => onInputChange(e, 'match'),\n              required: true,\n              className: classNames({\n                'p-invalid': submitted && !incident.match\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), submitted && !incident.match && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error\",\n              children: \" Match must be indicated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"player\",\n            className: \"col-fixed\",\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"player\",\n              value: incident.player,\n              onChange: e => onInputChange(e, 'player'),\n              required: true,\n              className: classNames({\n                'p-invalid': submitted && !incident.player\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), submitted && !incident.player && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error\",\n              children: \" Player be indicated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-p-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            label: \"Cancel\",\n            icon: \"pi pi-times\",\n            className: \"p-button-outlined mr-2\",\n            onClick: onCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Save\",\n            icon: \"pi pi-check\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailIncident, \"llRxCveRueDcXxseX7LLS0W1vWQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = DetailIncident;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailIncident\");","map":{"version":3,"sources":["/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/incident/detailIncident.js"],"names":["React","useState","useEffect","InputText","Button","Divider","classNames","Calendar","useParams","useNavigate","incidentService","DetailIncident","params","navigate","isNew","emptyIncident","incidentType","date","match","player","incident","setIncident","submitted","setSubmitted","getIncident","id","then","res","data","onInputChange","e","name","val","target","value","_incident","onInputDateChange","onCancel","event","handleSubmit","preventDefault","dataIncidentCorrect","createIncident","updateIncident","c"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Calendar } from 'primereact/calendar';\n\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport incidentService from '../../../services/incidentService';\n\n//retocar (atributos que dependen de otras tablas)\nexport default function DetailIncident() {\n\n    const params = useParams();\n    const navigate = useNavigate();\n    const isNew = !('id' in params);\n\n    const emptyIncident= { incidentType: \"\", date: \"\", match: \"\", player:\"\"}\n    const [incident, setIncident] = useState(emptyIncident);\n    const [submitted, setSubmitted] = useState(false);\n\n\n    useEffect(() => {\n        if (!isNew) {\n            incidentService.getIncident(params.id).then(res => setIncident(res.data));\n        }   \n    }, [params.id,isNew]);\n\n\n    function onInputChange(e, name) {\n        const val = (e.target && e.target.value) || '';\n        let _incident = { ...incident };\n        _incident[`${name}`] = val;\n        setIncident(_incident);\n    }\n    function onInputDateChange(e, date) {\n        const val = (e.target && e.target.value) || '';\n        let _incident = { ...incident };\n        _incident[`${date}`] = val;\n        setIncident(_incident);\n    }\n\n    function onCancel(event) {\n        navigate(\"/incidents\");\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setSubmitted(true);\n        if (dataIncidentCorrect(incident)) {\n            if (isNew) {\n                incidentService.createIncident(incident);\n            } else {\n                incidentService.updateIncident(incident);\n            }\n            navigate(\"/incidents\");\n        }\n    }\n\n    function dataIncidentCorrect(c) {\n        return (c.incidentType && c.player && c.date);\n    }\n\n    return (\n        <div>\n            <div className=\"surface-card border-round shadow-2 p-4\">\n                {!isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">Detail of Incident</span>}\n                {isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">New Incident </span>}\n\n                <form onSubmit={handleSubmit} >\n                        <div className=\"field grid\">\n                            <label htmlFor=\"incidentType\" className='col-fixed' >IncidentType</label>\n                            <div className=\"col\">\n                            <InputText id=\"incidentType\" value={incident.incidentType} onChange={(e) => onInputChange(e, 'incidentType')} required autoFocus className={classNames({ 'p-invalid': submitted && !incident.incidentType })} />\n                            {submitted && !incident.incidentType && <small className=\"p-error\">Incident type must be indicated.</small>}\n                            </div>\n                        </div>\n                        <div className=\"field grid\">\n                            <label htmlFor=\"date\" className='col-fixed'>Date</label>\n                            <div className=\"col\">\n                            <Calendar id=\"date\" required onChange={(e) => onInputDateChange(e,'date')} dateFormat=\"yy-mm-dd\" ></Calendar>\n                            </div>\n                        </div>\n                        \n                        <div className=\"field grid\">\n                            <label htmlFor=\"match\" className='col-fixed'>Match</label>\n                            <div className=\"col\">\n                            <InputText id=\"match\" value={incident.match} onChange={(e) => onInputChange(e, 'match')} required className={classNames({ 'p-invalid': submitted && !incident.match })} />\n                            {submitted && !incident.match && <small className=\"p-error\"> Match must be indicated.</small>}\n                            </div>\n                        </div>\n                        <div className=\"field grid\">\n                            <label htmlFor=\"player\" className='col-fixed'>Player</label>\n                            <div className=\"col\">\n                            <InputText id=\"player\" value={incident.player} onChange={(e) => onInputChange(e, 'player')} required className={classNames({ 'p-invalid': submitted && !incident.player })} />\n                            {submitted && !incident.player&& <small className=\"p-error\"> Player be indicated.</small>}\n                            </div>\n                        </div>\n\n                    <Divider />\n\n                    <div className=\"p-p-3\">\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-outlined mr-2\" onClick={onCancel} />\n                        <Button label=\"Save\" icon=\"pi pi-check\" type=\"submit\" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}