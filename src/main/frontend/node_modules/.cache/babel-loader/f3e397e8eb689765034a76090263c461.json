{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/player/detailPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport playerService from '../../../services/playerService'; //retocar (atributos que dependen de otras tablas)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailPlayer() {\n  _s();\n\n  const params = useParams();\n  const navigate = useNavigate();\n  const isNew = !('id' in params);\n  const emptyPlayer = {\n    name: \"\",\n    numberOfMatches: \"\",\n    position: \"\",\n    team: \"\"\n  };\n  const [player, setPlayer] = useState(emptyPlayer);\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    if (!isNew) {\n      playerService.getPlayer(params.id).then(res => setPlayer(res.data));\n    }\n  }, [params.id, isNew]);\n\n  function onInputChange(e, name) {\n    const val = e.target && e.target.value || '';\n    let _player = { ...player\n    };\n    _player[`${name}`] = val;\n    setPlayer(_player);\n  }\n\n  function onCancel(event) {\n    navigate(\"/players\");\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSubmitted(true);\n\n    if (dataPlayerCorrect(player)) {\n      if (isNew) {\n        playerService.createPlayer(player);\n      } else {\n        playerService.updatePlayer(player);\n      }\n\n      navigate(\"/players\");\n    }\n  }\n\n  function dataPlayerCorrect(c) {\n    return c.name && c.position;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"surface-card border-round shadow-2 p-4\",\n      children: [!isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"Detail of Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 28\n      }, this), isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"New Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n              id: \"name\",\n              value: player.name,\n              onChange: e => onInputChange(e, 'name'),\n              required: true,\n              autoFocus: true,\n              className: classNames({\n                'p-invalid': submitted && !player.name\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), submitted && !player.name && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error\",\n              children: \"Name must be indicated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"numberOfMatches\",\n              children: \"Number of matches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"numberOfMatches\",\n              value: player.numberOfMatches,\n              onChange: e => onInputChange(e, 'numberOfMatches'),\n              required: true,\n              className: classNames({\n                'p-invalid': submitted && !player.numberOfMatches\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), submitted && !player.numberOfMatches && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error\",\n              children: \" Number Of matches must be indicated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"position\",\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"position\",\n              value: player.position,\n              onChange: e => onInputChange(e, 'position')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"team\",\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"team\",\n              value: player.team.name,\n              onChange: e => onInputChange(e, 'team')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-p-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            label: \"Cancel\",\n            icon: \"pi pi-times\",\n            className: \"p-button-outlined mr-2\",\n            onClick: onCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Save\",\n            icon: \"pi pi-check\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailPlayer, \"lph0BjbR8IzDqoR3LVw5fS2Bq0o=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = DetailPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPlayer\");","map":{"version":3,"sources":["/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/player/detailPlayer.js"],"names":["React","useState","useEffect","InputText","InputNumber","Button","Divider","classNames","useParams","useNavigate","playerService","DetailPlayer","params","navigate","isNew","emptyPlayer","name","numberOfMatches","position","team","player","setPlayer","submitted","setSubmitted","getPlayer","id","then","res","data","onInputChange","e","val","target","value","_player","onCancel","event","handleSubmit","preventDefault","dataPlayerCorrect","createPlayer","updatePlayer","c"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { InputText } from 'primereact/inputtext';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\n\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport playerService from '../../../services/playerService';\n\n//retocar (atributos que dependen de otras tablas)\nexport default function DetailPlayer() {\n\n    const params = useParams();\n    const navigate = useNavigate();\n    const isNew = !('id' in params);\n\n    const emptyPlayer = { name: \"\", numberOfMatches: \"\", position: \"\", team:\"\"}\n    const [player, setPlayer] = useState(emptyPlayer);\n    const [submitted, setSubmitted] = useState(false);\n\n\n    useEffect(() => {\n        if (!isNew) {\n            playerService.getPlayer(params.id).then(res => setPlayer(res.data));\n        }   \n    }, [params.id,isNew]);\n\n\n    function onInputChange(e, name) {\n        const val = (e.target && e.target.value) || '';\n        let _player = { ...player };\n        _player[`${name}`] = val;\n        setPlayer(_player);\n    }\n\n    function onCancel(event) {\n        navigate(\"/players\");\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setSubmitted(true);\n        if (dataPlayerCorrect(player)) {\n            if (isNew) {\n                playerService.createPlayer(player);\n            } else {\n                playerService.updatePlayer(player);\n            }\n            navigate(\"/players\");\n        }\n    }\n\n    function dataPlayerCorrect(c) {\n        return (c.name && c.position);\n    }\n\n    return (\n        <div>\n            <div className=\"surface-card border-round shadow-2 p-4\">\n                {!isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">Detail of Player</span>}\n                {isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">New Player</span>}\n\n                <form onSubmit={handleSubmit} >\n                    <div className=\"p-fluid\">\n                        <div className=\"p-field\">\n                            <label htmlFor=\"name\" >name</label>\n                            <InputNumber id=\"name\" value={player.name} onChange={(e) => onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': submitted && !player.name })} />\n                            {submitted && !player.name && <small className=\"p-error\">Name must be indicated.</small>}\n                        </div>\n\n                        <div className=\"p-field\">\n                            <label htmlFor=\"numberOfMatches\">Number of matches</label>\n                            <InputText id=\"numberOfMatches\" value={player.numberOfMatches} onChange={(e) => onInputChange(e, 'numberOfMatches')} required className={classNames({ 'p-invalid': submitted && !player.numberOfMatches })} />\n                            {submitted && !player.numberOfMatches && <small className=\"p-error\"> Number Of matches must be indicated.</small>}\n                        </div>\n\n                        <div className=\"p-field\">\n                            <label htmlFor=\"position\">Position</label>\n                            <InputText id=\"position\" value={player.position} onChange={(e) => onInputChange(e, 'position')} />\n                        </div>\n\n                        <div className=\"p-field\">\n                            <label htmlFor=\"team\">Team</label>\n                            <InputText id=\"team\" value={player.team.name} onChange={(e) => onInputChange(e, 'team')} />\n                        </div>\n                    </div>\n\n                    <Divider />\n\n                    <div className=\"p-p-3\">\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-outlined mr-2\" onClick={onCancel} />\n                        <Button label=\"Save\" icon=\"pi pi-check\" type=\"submit\" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}