{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/team/detailTeam.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Dropdown } from 'primereact/dropdown';\nimport { useDispatch } from 'react-redux';\nimport { addTeam, updateTeam } from '../../../actions/team';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport teamService from '../../../services/teamService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailTeam() {\n  _s();\n\n  const params = useParams();\n  const navigate = useNavigate();\n  const isNew = !('id' in params);\n  const emptyTeam = {\n    name: \"\",\n    numberOfPlayers: \"\",\n    league: \"\"\n  };\n  const [team, setTeam] = useState(emptyTeam);\n  const [submitted, setSubmitted] = useState(false);\n  const nameLeagues = [\"Premier League\", \"LaLiga\", \"Serie A\", \"Bundesliga\", \"Ligue 1\", \"Primera DivisiÃ³n Portuguesa\"];\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isNew) {\n      teamService.getTeam(params.id).then(res => setTeam(res.data));\n    }\n  }, [params.id, isNew]);\n\n  function onInputChange(e, name) {\n    const val = e.target && e.target.value || '';\n    let _team = { ...team\n    };\n    _team[`${name}`] = val;\n    setTeam(_team);\n  }\n\n  function onLeagueChange(e) {\n    let _team = { ...team\n    };\n    _team.league = e.value;\n    setTeam(_team);\n  }\n\n  function onCancel(event) {\n    navigate(\"/teams\");\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSubmitted(true);\n\n    if (dataTeamCorrect(team)) {\n      if (isNew) {\n        dispatch(addTeam(team));\n      } else {\n        dispatch(updateTeam(team));\n      }\n\n      navigate(\"/teams\");\n    }\n  }\n\n  function dataTeamCorrect(c) {\n    return c.name && c.league;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"surface-card border-round shadow-2 p-4\",\n      children: [!isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"Detail of Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 28\n      }, this), isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-900 text-2xl font-medium mb-4 block\",\n        children: \"New Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"col-fixed\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"name\",\n              value: team.name,\n              onChange: e => onInputChange(e, 'name'),\n              required: true,\n              autoFocus: true,\n              className: classNames({\n                'p-invalid': submitted && !team.name\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), submitted && !team.name && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error\",\n              children: \"A name must be indicated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"numberOfPlayers\",\n            className: \"col-fixed\",\n            children: \"NumberOfPlayers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"numberOfPlayers\",\n              value: team.numberOfPlayers,\n              onChange: e => onInputChange(e, 'numberOfPlayers'),\n              required: true,\n              className: classNames({\n                'p-invalid': submitted && !team.numberOfPlayers\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), submitted && !team.numberOfPlayers && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error\",\n              children: \" Number of players must be indicated.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"leagues\",\n            className: \"col-fixed\",\n            children: \"League\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              id: \"leagues\",\n              value: team.league,\n              options: nameLeagues,\n              onChange: onLeagueChange,\n              filter: true,\n              showClear: true,\n              required: true,\n              filterBy: \"league\",\n              placeholder: \"Select league\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-p-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            label: \"Cancel\",\n            icon: \"pi pi-times\",\n            className: \"p-button-outlined mr-2\",\n            onClick: onCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Save\",\n            icon: \"pi pi-check\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DetailTeam, \"qbjUjQiudY+dn+FzPpL6CqavsCk=\", false, function () {\n  return [useParams, useNavigate, useDispatch];\n});\n\n_c = DetailTeam;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailTeam\");","map":{"version":3,"sources":["/home/nicolas/Documentos/Si/Practica/european_leagues/src/main/frontend/src/components/clientes/team/detailTeam.js"],"names":["React","useState","useEffect","useCallback","InputText","Button","Divider","classNames","Dropdown","useDispatch","addTeam","updateTeam","useParams","useNavigate","teamService","DetailTeam","params","navigate","isNew","emptyTeam","name","numberOfPlayers","league","team","setTeam","submitted","setSubmitted","nameLeagues","dispatch","getTeam","id","then","res","data","onInputChange","e","val","target","value","_team","onLeagueChange","onCancel","event","handleSubmit","preventDefault","dataTeamCorrect","c"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useCallback } from 'react';\n\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { Divider } from 'primereact/divider';\nimport { classNames } from 'primereact/utils';\nimport { Dropdown } from 'primereact/dropdown';\nimport {  useDispatch } from 'react-redux';\nimport {  addTeam, updateTeam} from '../../../actions/team';\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport teamService from '../../../services/teamService';\n\nexport default function DetailTeam() {\n\n    const params = useParams();\n    const navigate = useNavigate();\n    const isNew = !('id' in params);\n\n    const emptyTeam = { name: \"\", numberOfPlayers: \"\", league: \"\"}\n    const [team, setTeam] = useState(emptyTeam);\n    const [submitted, setSubmitted] = useState(false);\n    const nameLeagues =[\"Premier League\",\"LaLiga\",\"Serie A\",\"Bundesliga\",\"Ligue 1\",\"Primera DivisiÃ³n Portuguesa\"]\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!isNew) {\n            teamService.getTeam(params.id).then(res => setTeam(res.data));\n        }   \n    }, [params.id,isNew]);\n\n\n    function onInputChange(e, name) {\n        const val = (e.target && e.target.value) || '';\n        let _team = { ...team };\n        _team[`${name}`] = val;\n        setTeam(_team);\n    }\n\n    function onLeagueChange(e) {\n        let _team = { ...team };\n        _team.league = e.value;\n        setTeam(_team);\n    }\n\n    function onCancel(event) {\n        navigate(\"/teams\");\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setSubmitted(true);\n        if (dataTeamCorrect(team)) {\n            if (isNew) {\n                dispatch(addTeam(team));\n            } else {\n                dispatch(updateTeam(team));\n            }\n            navigate(\"/teams\");\n        }\n    }\n\n    function dataTeamCorrect(c) {\n        return (c.name && c.league);\n    }\n\n    return (\n        <div>\n            <div className=\"surface-card border-round shadow-2 p-4\">\n                {!isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">Detail of Team</span>}\n                {isNew && <span className=\"text-900 text-2xl font-medium mb-4 block\">New Team</span>}\n\n                <form onSubmit={handleSubmit} >\n                    <div className=\"field grid\">\n                            <label htmlFor=\"name\" className='col-fixed' >Name</label>\n                            <div className=\"col\">\n                            <InputText id=\"name\" value={team.name} onChange={(e) => onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': submitted && !team.name })} />\n                            {submitted && !team.name && <small className=\"p-error\">A name must be indicated.</small>}\n                        </div>\n                    </div>\n                        <div className=\"field grid\">\n                            <label htmlFor=\"numberOfPlayers\" className='col-fixed'>NumberOfPlayers</label>\n                            <div className=\"col\">\n                            <InputText id=\"numberOfPlayers\" value={team.numberOfPlayers} onChange={(e) => onInputChange(e, 'numberOfPlayers')} required className={classNames({ 'p-invalid': submitted && !team.numberOfPlayers })} />\n                            {submitted && !team.numberOfPlayers && <small className=\"p-error\"> Number of players must be indicated.</small>}\n                            </div>\n                    </div>\n                        <div className=\"field grid\">\n                            <label htmlFor=\"leagues\"className='col-fixed'>League</label>\n                            <div className='col'>\n                            <Dropdown id=\"leagues\"value={team.league} options={nameLeagues} onChange={onLeagueChange}\n                                filter showClear required filterBy=\"league\" placeholder=\"Select league\" />\n                            </div>\n                        </div>\n\n                    <Divider />\n\n                    <div className=\"p-p-3\">\n                        <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-outlined mr-2\" onClick={onCancel} />\n                        <Button label=\"Save\" icon=\"pi pi-check\" type=\"submit\" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}